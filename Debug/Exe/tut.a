;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 1/1/2024
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 4.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;#define keypin PINB
;
;char read_key = '\0' , read_val = '\0';
;
;interrupt [EXT_INT0] void read_keypad(void)
; 0000 0022 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0023     read_val = 0x0f & keypin;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0024     switch ( read_val )
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0025     {
; 0000 0026         case 0x00 :
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0027             read_key = '0';
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0028             break;
;PCODE: $00000018 VOL: 0
; 0000 0029         case 0x01 :
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002A             read_key = '1';
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002B             break;
;PCODE: $0000001E VOL: 0
; 0000 002C         case 0x02 :
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002D             read_key = '2';
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002E             break;
;PCODE: $00000024 VOL: 0
; 0000 002F         case 0x03 :
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0030             read_key = '3';
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0031             break;
;PCODE: $0000002A VOL: 0
; 0000 0032         case 0x04 :
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0033             read_key = '4';
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0034             break;
;PCODE: $00000030 VOL: 0
; 0000 0035         case 0x05 :
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0036             read_key = '5';
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0037             break;
;PCODE: $00000036 VOL: 0
; 0000 0038         case 0x06 :
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0039             read_key = '6';
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003A             break;
;PCODE: $0000003C VOL: 0
; 0000 003B         case 0x07 :
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 003C             read_key = '7';
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 003D             break;
;PCODE: $00000042 VOL: 0
; 0000 003E         case 0x08 :
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 003F             read_key = '8';
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0040             break;
;PCODE: $00000048 VOL: 0
; 0000 0041         case 0x09 :
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0042             read_key = '9';
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0043             break;
;PCODE: $0000004E VOL: 0
; 0000 0044         case 0x0a :
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0045             read_key = 'A';
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0046             break;
;PCODE: $00000054 VOL: 0
; 0000 0047         case 0x0b :
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0048             read_key = 'B';
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0049             break;
;PCODE: $0000005A VOL: 0
; 0000 004A         case 0x0c :
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 004B             read_key = 'C';
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 004C             break;
;PCODE: $00000060 VOL: 0
; 0000 004D         case 0x0d :
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 004E             read_key = 'D';
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 004F             break;
;PCODE: $00000066 VOL: 0
; 0000 0050         case 0x0e :
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0051             read_key = 'E';
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0052             break;
;PCODE: $0000006C VOL: 0
; 0000 0053         case 0x0f :
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0054             read_key = 'F';
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0055             break;
;PCODE: $00000072 VOL: 0
; 0000 0056     }
;PCODE: $00000073 VOL: 0
; 0000 0057 
; 0000 0058     lcd_putchar( read_key ) ;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0059 
; 0000 005A }
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;
;void main(void)
; 0000 005D {
;PCODE: $00000079 VOL: 0
; 0000 005E 
; 0000 005F DDRB = 0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0060 PORTB = 0xff;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0061 DDRC = 0xff;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0062 PORTC = 0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0063 
; 0000 0064 GICR|=(0<<INT1) | (1<<INT0) | (0<<INT2);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0065 MCUCR=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (1<<ISC00);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0066 MCUCSR=(0<<ISC2);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0067 GIFR=(0<<INTF1) | (1<<INTF0) | (0<<INTF2);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0068 
; 0000 0069 lcd_init(16);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 006A 
; 0000 006B // Global enable interrupts
; 0000 006C #asm("sei")
;PCODE: $0000008D VOL: 0
	sei
;PCODE: $0000008E VOL: 0
; 0000 006D 
; 0000 006E while (1)
;PCODE: $0000008F VOL: 0
; 0000 006F       {
; 0000 0070       // Place your code here
; 0000 0071 
; 0000 0072       }
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0073 }
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
